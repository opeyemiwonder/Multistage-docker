name: Deploy Multistage Docker

on:
  # Runs on pushes targeting the "release" branch
  push:
    branches:
      - release

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.88.1
    steps:
      - name: Install Hugo CLI
        run: |
          HUGO_VERSION="0.88.1"  # Replace with the desired Hugo version
          wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz -O /tmp/hugo.tar.gz
          tar -xf /tmp/hugo.tar.gz -C /tmp
          sudo mv /tmp/hugo /usr/local/bin/hugo
          hugo version
          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      # - name: Update theme
      #   # (Optional)If you have the theme added as submodule, you can pull it and use the most updated version
      #   run: git submodule update --init --recursive
        
      # - name: Setup Pages
      #   id: pages
      #   uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        working-directory: ./mynewsite
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo
          # hugo \
          #   --gc \
          #   --minify \
          #   --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./mynewsite/public
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v2
      #   with:
      #     # Set the branch to "release"
      #     branch: release
          
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.TOKEN }}
          # external_repository: <username>/<username>.github.io
          publish_dir: ./mynewsite/public
          #   keep_files: true
          # user_name: <username>
          # user_email: <username@email.com>
          publish_branch: release
        #   cname: example.com
    
